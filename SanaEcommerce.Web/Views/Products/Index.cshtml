@model IEnumerable<SanaEcommerce.Web.ViewModel.ProductViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<p>
<a asp-action="Create" asp-route-storageMode="@ViewData["storageMode"]" class="btn btn-primary btn-large">Create New</a>
@if ((string)@ViewData["storageMode"] == "database")
{
    <button id="btnInmemory" class="btn btn-large btn-success float-right" type="button" onclick="ChangeStorage('memory');">Get data from Memory</button>
}
else
{
    <button id="btnDatabase" class="btn btn-large btn-success float-right" type="button" onclick="ChangeStorage('database');">Get data from Database</button>
}
</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    function ChangeStorage(storage) {
        window.location.href = "/Products/index?storageMode=" + storage;
    }
</script>